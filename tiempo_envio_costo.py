# -*- coding: utf-8 -*-
"""Tiempo_Envio_Costo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j-PfUyxCLol0X-ZpWT3uCPIrcG-9Won-
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

tiempoDias = np.array([1, 2, 3, 4, 10, 20], dtype = float)
lugarKm = np.array([10, 20, 30, 40, 100, 200], dtype = float)
costoEnvio = np.array([50.75, 101.5, 152.25, 203, 507.5, 1015], dtype = float)

entrada = tf.keras.layers.Dense(units = 2, input_shape = [2])
oculta1 = tf.keras.layers.Dense(units = 4, activation = 'relu')
oculta2 = tf.keras.layers.Dense(units = 4, activation = 'relu')
salida = tf.keras.layers.Dense(units = 1)
modelo = tf.keras.Sequential([entrada,oculta1,oculta2,salida])

modelo.compile(
      optimizer= tf.keras.optimizers.Adam(0.1), loss = 'mean_squared_error'
)

print("Entrenando neuronas...")
historial = modelo.fit(x = np.column_stack((tiempoDias, lugarKm)), y = costoEnvio, epochs = 1000, verbose = False)
print("Neuronas Entrenadas")

plt.xlabel("# Epoca")
plt.ylabel("Magnitud de p√©rdida")
plt.plot(historial.history["loss"])

#Comprobar si esta entrenada
nuevoTiempo = 30
nuevoKm = 300
nuevoCosto = modelo.predict(np.array([[nuevoTiempo, nuevoKm]]))[0][0]
print("El resultado es: " + str(nuevoCosto))
